//
//  EntryWorker.swift
//  freeza
//
//  Created by Cesar Brenes on 12/17/20.
//  Copyright (c) 2020 Zerously. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol EntryStoreProtocol {
    func insert(entryModel: EntryModel, completionHandler: @escaping () -> (), errorHandler: @escaping (_ message: String) -> ())
    func fetchAll(completionHandler: @escaping (_ entries: [EntryModel]) -> (), errorHandler: @escaping (_ message: String) -> ())
    func delete(id: Int, completionHandler: @escaping () -> (), errorHandler: @escaping (_ message: String) -> ())
}

class EntryWorker {
  
    var store: EntryStoreProtocol
    
    init(store: EntryStoreProtocol) {
        self.store = store
    }
    
    func insert(entryModel: EntryModel, completionHandler: @escaping () -> (), errorHandler: @escaping (_ message: String) -> ()) {
        store.insert(entryModel: entryModel, completionHandler: completionHandler, errorHandler: errorHandler)
    }
    
    func fetchAll(completionHandler: @escaping (_ entries: [EntryModel]) -> (), errorHandler: @escaping (_ message: String) -> ()) {
        store.fetchAll(completionHandler: completionHandler, errorHandler: errorHandler)
    }
    
    func delete(id: Int, completionHandler: @escaping () -> (), errorHandler: @escaping (_ message: String) -> ()) {
        store.delete(id: id, completionHandler: completionHandler, errorHandler: errorHandler)
    }
}
