//
//  MainEntryViewController.swift
//  freeza
//
//  Created by Cesar Brenes on 12/18/20.
//  Copyright (c) 2020 Zerously. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainEntryDisplayLogic: class {
    func displayDataSource(viewModel: MainEntry.DataStore.ViewModel)
}

class MainEntryViewController: UIViewController, MainEntryDisplayLogic {
    var interactor: MainEntryInteractor?
    var mainRouter: (NSObjectProtocol & MainEntryRoutingLogic & MainEntryDataPassing)?
    
    // MARK: Object lifecycle

    // MARK: Setup
    
    func setup(businessLogic: MainEntryBusinessLogic) {
        let viewController = self
        let presenter = MainEntryPresenter()
        let interactor = MainEntryInteractor(businessLogic: businessLogic)
        let mainRouter = MainEntryRouter()
        viewController.interactor = interactor
        viewController.mainRouter = mainRouter
        interactor.presenter = presenter
        presenter.viewController = viewController
        mainRouter.viewController = viewController
        mainRouter.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = mainRouter, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        requestDataSource()
    }
    
    
    // MARK: Request Methods
    func requestDataSource() {
        let request = MainEntry.DataStore.Request()
        interactor?.requestDataStore(request: request)
    }
    
    
    // MARK: Display methods
    func displayDataSource(viewModel: MainEntry.DataStore.ViewModel) {
      //  print("ðŸ‘¾ \(viewModel.prueba)")
    }
}
